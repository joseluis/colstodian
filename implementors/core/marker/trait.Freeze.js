(function() {var implementors = {};
implementors["bytemuck"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"bytemuck/enum.PodCastError.html\" title=\"enum bytemuck::PodCastError\">PodCastError</a>","synthetic":true,"types":["bytemuck::PodCastError"]}];
implementors["cint"] = [{"text":"impl&lt;ColorTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.Alpha.html\" title=\"struct cint::Alpha\">Alpha</a>&lt;ColorTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ColorTy: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;ColorTy as <a class=\"trait\" href=\"cint/trait.ColorStruct.html\" title=\"trait cint::ColorStruct\">ColorStruct</a>&gt;::<a class=\"type\" href=\"cint/trait.ColorStruct.html#associatedtype.ComponentTy\" title=\"type cint::ColorStruct::ComponentTy\">ComponentTy</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::Alpha"]},{"text":"impl&lt;ColorTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.PremultipliedAlpha.html\" title=\"struct cint::PremultipliedAlpha\">PremultipliedAlpha</a>&lt;ColorTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ColorTy: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;ColorTy as <a class=\"trait\" href=\"cint/trait.ColorStruct.html\" title=\"trait cint::ColorStruct\">ColorStruct</a>&gt;::<a class=\"type\" href=\"cint/trait.ColorStruct.html#associatedtype.ComponentTy\" title=\"type cint::ColorStruct::ComponentTy\">ComponentTy</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::PremultipliedAlpha"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.EncodedSrgb.html\" title=\"struct cint::EncodedSrgb\">EncodedSrgb</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::EncodedSrgb"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.LinearSrgb.html\" title=\"struct cint::LinearSrgb\">LinearSrgb</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::LinearSrgb"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.EncodedRec709.html\" title=\"struct cint::EncodedRec709\">EncodedRec709</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::EncodedRec709"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.Rec709.html\" title=\"struct cint::Rec709\">Rec709</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::Rec709"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.GenericColor.html\" title=\"struct cint::GenericColor\">GenericColor</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::GenericColor"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.AcesCg.html\" title=\"struct cint::AcesCg\">AcesCg</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::AcesCg"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.Aces2065.html\" title=\"struct cint::Aces2065\">Aces2065</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::Aces2065"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.AcesCc.html\" title=\"struct cint::AcesCc\">AcesCc</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::AcesCc"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.AcesCct.html\" title=\"struct cint::AcesCct\">AcesCct</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::AcesCct"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.DisplayP3.html\" title=\"struct cint::DisplayP3\">DisplayP3</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::DisplayP3"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.EncodedDisplayP3.html\" title=\"struct cint::EncodedDisplayP3\">EncodedDisplayP3</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::EncodedDisplayP3"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.DciP3.html\" title=\"struct cint::DciP3\">DciP3</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::DciP3"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.DciXYZPrime.html\" title=\"struct cint::DciXYZPrime\">DciXYZPrime</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::DciXYZPrime"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.Bt2020.html\" title=\"struct cint::Bt2020\">Bt2020</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::Bt2020"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.EncodedBt2020.html\" title=\"struct cint::EncodedBt2020\">EncodedBt2020</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::EncodedBt2020"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.Bt2100.html\" title=\"struct cint::Bt2100\">Bt2100</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::Bt2100"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.EncodedBt2100PQ.html\" title=\"struct cint::EncodedBt2100PQ\">EncodedBt2100PQ</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::EncodedBt2100PQ"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.EncodedBt2100HLG.html\" title=\"struct cint::EncodedBt2100HLG\">EncodedBt2100HLG</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::EncodedBt2100HLG"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.ICtCpPQ.html\" title=\"struct cint::ICtCpPQ\">ICtCpPQ</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::ICtCpPQ"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.ICtCpHLG.html\" title=\"struct cint::ICtCpHLG\">ICtCpHLG</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::ICtCpHLG"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.CieXYZ.html\" title=\"struct cint::CieXYZ\">CieXYZ</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::CieXYZ"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.CieLab.html\" title=\"struct cint::CieLab\">CieLab</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::CieLab"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.CieLCh.html\" title=\"struct cint::CieLCh\">CieLCh</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::CieLCh"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.Oklab.html\" title=\"struct cint::Oklab\">Oklab</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::Oklab"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.Oklch.html\" title=\"struct cint::Oklch\">Oklch</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::Oklch"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.Hsl.html\" title=\"struct cint::Hsl\">Hsl</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::Hsl"]},{"text":"impl&lt;ComponentTy&gt; Freeze for <a class=\"struct\" href=\"cint/struct.Hsv.html\" title=\"struct cint::Hsv\">Hsv</a>&lt;ComponentTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ComponentTy: Freeze,&nbsp;</span>","synthetic":true,"types":["cint::Hsv"]}];
implementors["colstodian"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.LinearSrgb.html\" title=\"struct colstodian::spaces::LinearSrgb\">LinearSrgb</a>","synthetic":true,"types":["colstodian::spaces::LinearSrgb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.EncodedSrgb.html\" title=\"struct colstodian::spaces::EncodedSrgb\">EncodedSrgb</a>","synthetic":true,"types":["colstodian::spaces::EncodedSrgb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.CieXYZ.html\" title=\"struct colstodian::spaces::CieXYZ\">CieXYZ</a>","synthetic":true,"types":["colstodian::spaces::CieXYZ"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.Bt2020.html\" title=\"struct colstodian::spaces::Bt2020\">Bt2020</a>","synthetic":true,"types":["colstodian::spaces::Bt2020"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.EncodedBt2020.html\" title=\"struct colstodian::spaces::EncodedBt2020\">EncodedBt2020</a>","synthetic":true,"types":["colstodian::spaces::EncodedBt2020"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.EncodedBt2100PQ.html\" title=\"struct colstodian::spaces::EncodedBt2100PQ\">EncodedBt2100PQ</a>","synthetic":true,"types":["colstodian::spaces::EncodedBt2100PQ"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.ICtCpPQ.html\" title=\"struct colstodian::spaces::ICtCpPQ\">ICtCpPQ</a>","synthetic":true,"types":["colstodian::spaces::ICtCpPQ"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.Oklab.html\" title=\"struct colstodian::spaces::Oklab\">Oklab</a>","synthetic":true,"types":["colstodian::spaces::Oklab"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.Oklch.html\" title=\"struct colstodian::spaces::Oklch\">Oklch</a>","synthetic":true,"types":["colstodian::spaces::Oklch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.AcesCg.html\" title=\"struct colstodian::spaces::AcesCg\">AcesCg</a>","synthetic":true,"types":["colstodian::spaces::AcesCg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.EncodedAcesCgSrgb.html\" title=\"struct colstodian::spaces::EncodedAcesCgSrgb\">EncodedAcesCgSrgb</a>","synthetic":true,"types":["colstodian::spaces::EncodedAcesCgSrgb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.Aces2065.html\" title=\"struct colstodian::spaces::Aces2065\">Aces2065</a>","synthetic":true,"types":["colstodian::spaces::Aces2065"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.DisplayP3.html\" title=\"struct colstodian::spaces::DisplayP3\">DisplayP3</a>","synthetic":true,"types":["colstodian::spaces::DisplayP3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/spaces/struct.EncodedDisplayP3.html\" title=\"struct colstodian::spaces::EncodedDisplayP3\">EncodedDisplayP3</a>","synthetic":true,"types":["colstodian::spaces::EncodedDisplayP3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/struct.Scene.html\" title=\"struct colstodian::Scene\">Scene</a>","synthetic":true,"types":["colstodian::states::Scene"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/struct.Display.html\" title=\"struct colstodian::Display\">Display</a>","synthetic":true,"types":["colstodian::states::Display"]},{"text":"impl Freeze for <a class=\"enum\" href=\"colstodian/enum.DynamicState.html\" title=\"enum colstodian::DynamicState\">DynamicState</a>","synthetic":true,"types":["colstodian::states::DynamicState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/struct.Premultiplied.html\" title=\"struct colstodian::Premultiplied\">Premultiplied</a>","synthetic":true,"types":["colstodian::alpha_states::Premultiplied"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/struct.Separate.html\" title=\"struct colstodian::Separate\">Separate</a>","synthetic":true,"types":["colstodian::alpha_states::Separate"]},{"text":"impl Freeze for <a class=\"enum\" href=\"colstodian/enum.DynamicAlphaState.html\" title=\"enum colstodian::DynamicAlphaState\">DynamicAlphaState</a>","synthetic":true,"types":["colstodian::alpha_states::DynamicAlphaState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/tonemap/struct.PerceptualTonemapperParams.html\" title=\"struct colstodian::tonemap::PerceptualTonemapperParams\">PerceptualTonemapperParams</a>","synthetic":true,"types":["colstodian::tonemap::PerceptualTonemapperParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/tonemap/struct.PerceptualTonemapper.html\" title=\"struct colstodian::tonemap::PerceptualTonemapper\">PerceptualTonemapper</a>","synthetic":true,"types":["colstodian::tonemap::PerceptualTonemapper"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/tonemap/struct.LottesTonemapperParams.html\" title=\"struct colstodian::tonemap::LottesTonemapperParams\">LottesTonemapperParams</a>","synthetic":true,"types":["colstodian::tonemap::LottesTonemapperParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/tonemap/struct.BakedLottesTonemapperParams.html\" title=\"struct colstodian::tonemap::BakedLottesTonemapperParams\">BakedLottesTonemapperParams</a>","synthetic":true,"types":["colstodian::tonemap::BakedLottesTonemapperParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/tonemap/struct.LottesTonemapper.html\" title=\"struct colstodian::tonemap::LottesTonemapper\">LottesTonemapper</a>","synthetic":true,"types":["colstodian::tonemap::LottesTonemapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"colstodian/component_structs/struct.ColAlpha.html\" title=\"struct colstodian::component_structs::ColAlpha\">ColAlpha</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["colstodian::component_structs::ColAlpha"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/component_structs/struct.Rgb.html\" title=\"struct colstodian::component_structs::Rgb\">Rgb</a>","synthetic":true,"types":["colstodian::component_structs::Rgb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/component_structs/struct.ICtCp.html\" title=\"struct colstodian::component_structs::ICtCp\">ICtCp</a>","synthetic":true,"types":["colstodian::component_structs::ICtCp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/component_structs/struct.Xyz.html\" title=\"struct colstodian::component_structs::Xyz\">Xyz</a>","synthetic":true,"types":["colstodian::component_structs::Xyz"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/component_structs/struct.Lab.html\" title=\"struct colstodian::component_structs::Lab\">Lab</a>","synthetic":true,"types":["colstodian::component_structs::Lab"]},{"text":"impl Freeze for <a class=\"struct\" href=\"colstodian/component_structs/struct.LCh.html\" title=\"struct colstodian::component_structs::LCh\">LCh</a>","synthetic":true,"types":["colstodian::component_structs::LCh"]},{"text":"impl&lt;Spc, St, A&gt; Freeze for <a class=\"struct\" href=\"colstodian/color/struct.ColorU8Alpha.html\" title=\"struct colstodian::color::ColorU8Alpha\">ColorU8Alpha</a>&lt;Spc, St, A&gt;","synthetic":true,"types":["colstodian::color::color_alpha::color_u8::ColorU8Alpha"]},{"text":"impl&lt;Spc, St, A&gt; Freeze for <a class=\"struct\" href=\"colstodian/color/struct.ColorAlpha.html\" title=\"struct colstodian::color::ColorAlpha\">ColorAlpha</a>&lt;Spc, St, A&gt;","synthetic":true,"types":["colstodian::color::color_alpha::ColorAlpha"]},{"text":"impl&lt;Spc, St&gt; Freeze for <a class=\"struct\" href=\"colstodian/color/struct.ColorU8.html\" title=\"struct colstodian::color::ColorU8\">ColorU8</a>&lt;Spc, St&gt;","synthetic":true,"types":["colstodian::color::color_u8::ColorU8"]},{"text":"impl&lt;Spc, St&gt; Freeze for <a class=\"struct\" href=\"colstodian/struct.Color.html\" title=\"struct colstodian::Color\">Color</a>&lt;Spc, St&gt;","synthetic":true,"types":["colstodian::color::Color"]},{"text":"impl Freeze for <a class=\"enum\" href=\"colstodian/enum.ColorError.html\" title=\"enum colstodian::ColorError\">ColorError</a>","synthetic":true,"types":["colstodian::error::ColorError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"colstodian/error/enum.DowncastError.html\" title=\"enum colstodian::error::DowncastError\">DowncastError</a>","synthetic":true,"types":["colstodian::error::DowncastError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"colstodian/error/enum.DynamicConversionError.html\" title=\"enum colstodian::error::DynamicConversionError\">DynamicConversionError</a>","synthetic":true,"types":["colstodian::error::DynamicConversionError"]}];
implementors["glam"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Affine2.html\" title=\"struct glam::f32::Affine2\">Affine2</a>","synthetic":true,"types":["glam::affine2::Affine2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f64/struct.DAffine2.html\" title=\"struct glam::f64::DAffine2\">DAffine2</a>","synthetic":true,"types":["glam::affine2::DAffine2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Affine3A.html\" title=\"struct glam::f32::Affine3A\">Affine3A</a>","synthetic":true,"types":["glam::affine3::Affine3A"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f64/struct.DAffine3.html\" title=\"struct glam::f64::DAffine3\">DAffine3</a>","synthetic":true,"types":["glam::affine3::DAffine3"]},{"text":"impl Freeze for <a class=\"enum\" href=\"glam/enum.EulerRot.html\" title=\"enum glam::EulerRot\">EulerRot</a>","synthetic":true,"types":["glam::euler::EulerRot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Mat2.html\" title=\"struct glam::f32::Mat2\">Mat2</a>","synthetic":true,"types":["glam::mat2::Mat2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f64/struct.DMat2.html\" title=\"struct glam::f64::DMat2\">DMat2</a>","synthetic":true,"types":["glam::mat2::DMat2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Mat3.html\" title=\"struct glam::f32::Mat3\">Mat3</a>","synthetic":true,"types":["glam::mat3::Mat3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Mat3A.html\" title=\"struct glam::f32::Mat3A\">Mat3A</a>","synthetic":true,"types":["glam::mat3::Mat3A"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f64/struct.DMat3.html\" title=\"struct glam::f64::DMat3\">DMat3</a>","synthetic":true,"types":["glam::mat3::DMat3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Mat4.html\" title=\"struct glam::f32::Mat4\">Mat4</a>","synthetic":true,"types":["glam::mat4::Mat4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f64/struct.DMat4.html\" title=\"struct glam::f64::DMat4\">DMat4</a>","synthetic":true,"types":["glam::mat4::DMat4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Quat.html\" title=\"struct glam::f32::Quat\">Quat</a>","synthetic":true,"types":["glam::quat::Quat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f64/struct.DQuat.html\" title=\"struct glam::f64::DQuat\">DQuat</a>","synthetic":true,"types":["glam::quat::DQuat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Vec2.html\" title=\"struct glam::f32::Vec2\">Vec2</a>","synthetic":true,"types":["glam::vec2::Vec2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f64/struct.DVec2.html\" title=\"struct glam::f64::DVec2\">DVec2</a>","synthetic":true,"types":["glam::vec2::DVec2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/i32/struct.IVec2.html\" title=\"struct glam::i32::IVec2\">IVec2</a>","synthetic":true,"types":["glam::vec2::IVec2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/u32/struct.UVec2.html\" title=\"struct glam::u32::UVec2\">UVec2</a>","synthetic":true,"types":["glam::vec2::UVec2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Vec3.html\" title=\"struct glam::f32::Vec3\">Vec3</a>","synthetic":true,"types":["glam::vec3::Vec3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Vec3A.html\" title=\"struct glam::f32::Vec3A\">Vec3A</a>","synthetic":true,"types":["glam::vec3::Vec3A"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f64/struct.DVec3.html\" title=\"struct glam::f64::DVec3\">DVec3</a>","synthetic":true,"types":["glam::vec3::DVec3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/i32/struct.IVec3.html\" title=\"struct glam::i32::IVec3\">IVec3</a>","synthetic":true,"types":["glam::vec3::IVec3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/u32/struct.UVec3.html\" title=\"struct glam::u32::UVec3\">UVec3</a>","synthetic":true,"types":["glam::vec3::UVec3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f32/struct.Vec4.html\" title=\"struct glam::f32::Vec4\">Vec4</a>","synthetic":true,"types":["glam::vec4::Vec4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/f64/struct.DVec4.html\" title=\"struct glam::f64::DVec4\">DVec4</a>","synthetic":true,"types":["glam::vec4::DVec4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/i32/struct.IVec4.html\" title=\"struct glam::i32::IVec4\">IVec4</a>","synthetic":true,"types":["glam::vec4::IVec4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/u32/struct.UVec4.html\" title=\"struct glam::u32::UVec4\">UVec4</a>","synthetic":true,"types":["glam::vec4::UVec4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/bool/struct.BVec3A.html\" title=\"struct glam::bool::BVec3A\">BVec3A</a>","synthetic":true,"types":["glam::vec_mask::BVec3A"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/bool/struct.BVec4A.html\" title=\"struct glam::bool::BVec4A\">BVec4A</a>","synthetic":true,"types":["glam::vec_mask::BVec4A"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/bool/struct.BVec2.html\" title=\"struct glam::bool::BVec2\">BVec2</a>","synthetic":true,"types":["glam::vec_mask::BVec2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/bool/struct.BVec3.html\" title=\"struct glam::bool::BVec3\">BVec3</a>","synthetic":true,"types":["glam::vec_mask::BVec3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"glam/bool/struct.BVec4.html\" title=\"struct glam::bool::BVec4\">BVec4</a>","synthetic":true,"types":["glam::vec_mask::BVec4"]}];
implementors["kolor"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"kolor/details/cat/enum.LMSConeSpace.html\" title=\"enum kolor::details::cat::LMSConeSpace\">LMSConeSpace</a>","synthetic":true,"types":["kolor::details::cat::LMSConeSpace"]},{"text":"impl Freeze for <a class=\"enum\" href=\"kolor/details/color/enum.TransformFn.html\" title=\"enum kolor::details::color::TransformFn\">TransformFn</a>","synthetic":true,"types":["kolor::details::color::TransformFn"]},{"text":"impl Freeze for <a class=\"enum\" href=\"kolor/details/color/enum.RGBPrimaries.html\" title=\"enum kolor::details::color::RGBPrimaries\">RGBPrimaries</a>","synthetic":true,"types":["kolor::details::color::RGBPrimaries"]},{"text":"impl Freeze for <a class=\"enum\" href=\"kolor/details/color/enum.WhitePoint.html\" title=\"enum kolor::details::color::WhitePoint\">WhitePoint</a>","synthetic":true,"types":["kolor::details::color::WhitePoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"kolor/struct.ColorSpace.html\" title=\"struct kolor::ColorSpace\">ColorSpace</a>","synthetic":true,"types":["kolor::details::color::ColorSpace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"kolor/struct.Color.html\" title=\"struct kolor::Color\">Color</a>","synthetic":true,"types":["kolor::details::color::Color"]},{"text":"impl Freeze for <a class=\"struct\" href=\"kolor/details/conversion/struct.LinearColorConversion.html\" title=\"struct kolor::details::conversion::LinearColorConversion\">LinearColorConversion</a>","synthetic":true,"types":["kolor::details::conversion::LinearColorConversion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"kolor/struct.ColorConversion.html\" title=\"struct kolor::ColorConversion\">ColorConversion</a>","synthetic":true,"types":["kolor::details::conversion::ColorConversion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"kolor/details/transform/struct.ColorTransform.html\" title=\"struct kolor::details::transform::ColorTransform\">ColorTransform</a>","synthetic":true,"types":["kolor::details::transform::ColorTransform"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>","synthetic":true,"types":["proc_macro2::token_stream::IntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>","synthetic":true,"types":["proc_macro2::TokenStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":true,"types":["proc_macro2::LexError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>","synthetic":true,"types":["proc_macro2::Span"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>","synthetic":true,"types":["proc_macro2::TokenTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>","synthetic":true,"types":["proc_macro2::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>","synthetic":true,"types":["proc_macro2::Delimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>","synthetic":true,"types":["proc_macro2::Punct"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>","synthetic":true,"types":["proc_macro2::Spacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>","synthetic":true,"types":["proc_macro2::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>","synthetic":true,"types":["proc_macro2::Literal"]}];
implementors["serde"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>","synthetic":true,"types":["serde::de::value::Error"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UnitDeserializer.html\" title=\"struct serde::de::value::UnitDeserializer\">UnitDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UnitDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::BoolDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I8Deserializer.html\" title=\"struct serde::de::value::I8Deserializer\">I8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I16Deserializer.html\" title=\"struct serde::de::value::I16Deserializer\">I16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I32Deserializer.html\" title=\"struct serde::de::value::I32Deserializer\">I32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I64Deserializer.html\" title=\"struct serde::de::value::I64Deserializer\">I64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.IsizeDeserializer.html\" title=\"struct serde::de::value::IsizeDeserializer\">IsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::IsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U8Deserializer.html\" title=\"struct serde::de::value::U8Deserializer\">U8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U16Deserializer.html\" title=\"struct serde::de::value::U16Deserializer\">U16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UsizeDeserializer.html\" title=\"struct serde::de::value::UsizeDeserializer\">UsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F32Deserializer.html\" title=\"struct serde::de::value::F32Deserializer\">F32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F64Deserializer.html\" title=\"struct serde::de::value::F64Deserializer\">F64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CharDeserializer.html\" title=\"struct serde::de::value::CharDeserializer\">CharDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::CharDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I128Deserializer.html\" title=\"struct serde::de::value::I128Deserializer\">I128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U128Deserializer.html\" title=\"struct serde::de::value::U128Deserializer\">U128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U32Deserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StrDeserializer.html\" title=\"struct serde::de::value::StrDeserializer\">StrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::StrDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedStrDeserializer.html\" title=\"struct serde::de::value::BorrowedStrDeserializer\">BorrowedStrDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedStrDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StringDeserializer.html\" title=\"struct serde::de::value::StringDeserializer\">StringDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::StringDeserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CowStrDeserializer.html\" title=\"struct serde::de::value::CowStrDeserializer\">CowStrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::CowStrDeserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BytesDeserializer.html\" title=\"struct serde::de::value::BytesDeserializer\">BytesDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::BytesDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedBytesDeserializer.html\" title=\"struct serde::de::value::BorrowedBytesDeserializer\">BorrowedBytesDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedBytesDeserializer"]},{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqDeserializer.html\" title=\"struct serde::de::value::SeqDeserializer\">SeqDeserializer</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqAccessDeserializer.html\" title=\"struct serde::de::value::SeqAccessDeserializer\">SeqAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqAccessDeserializer"]},{"text":"impl&lt;'de, I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapDeserializer.html\" title=\"struct serde::de::value::MapDeserializer\">MapDeserializer</a>&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapAccessDeserializer.html\" title=\"struct serde::de::value::MapAccessDeserializer\">MapAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapAccessDeserializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/struct.IgnoredAny.html\" title=\"struct serde::de::IgnoredAny\">IgnoredAny</a>","synthetic":true,"types":["serde::de::ignored_any::IgnoredAny"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;","synthetic":true,"types":["serde::de::Unexpected"]},{"text":"impl&lt;Ok, Error&gt; Freeze for <a class=\"struct\" href=\"serde/ser/struct.Impossible.html\" title=\"struct serde::ser::Impossible\">Impossible</a>&lt;Ok, Error&gt;","synthetic":true,"types":["serde::ser::impossible::Impossible"]}];
implementors["syn"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>","synthetic":true,"types":["syn::token::Underscore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>","synthetic":true,"types":["syn::token::Abstract"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>","synthetic":true,"types":["syn::token::As"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>","synthetic":true,"types":["syn::token::Async"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>","synthetic":true,"types":["syn::token::Auto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Await.html\" title=\"struct syn::token::Await\">Await</a>","synthetic":true,"types":["syn::token::Await"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>","synthetic":true,"types":["syn::token::Become"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>","synthetic":true,"types":["syn::token::Box"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>","synthetic":true,"types":["syn::token::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>","synthetic":true,"types":["syn::token::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>","synthetic":true,"types":["syn::token::Continue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>","synthetic":true,"types":["syn::token::Crate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>","synthetic":true,"types":["syn::token::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>","synthetic":true,"types":["syn::token::Do"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>","synthetic":true,"types":["syn::token::Dyn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>","synthetic":true,"types":["syn::token::Else"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>","synthetic":true,"types":["syn::token::Enum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>","synthetic":true,"types":["syn::token::Extern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>","synthetic":true,"types":["syn::token::Final"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>","synthetic":true,"types":["syn::token::Fn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>","synthetic":true,"types":["syn::token::For"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>","synthetic":true,"types":["syn::token::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>","synthetic":true,"types":["syn::token::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>","synthetic":true,"types":["syn::token::In"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>","synthetic":true,"types":["syn::token::Let"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>","synthetic":true,"types":["syn::token::Loop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>","synthetic":true,"types":["syn::token::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>","synthetic":true,"types":["syn::token::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>","synthetic":true,"types":["syn::token::Mod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>","synthetic":true,"types":["syn::token::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>","synthetic":true,"types":["syn::token::Mut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>","synthetic":true,"types":["syn::token::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>","synthetic":true,"types":["syn::token::Priv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>","synthetic":true,"types":["syn::token::Pub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>","synthetic":true,"types":["syn::token::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>","synthetic":true,"types":["syn::token::Return"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>","synthetic":true,"types":["syn::token::SelfType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>","synthetic":true,"types":["syn::token::SelfValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>","synthetic":true,"types":["syn::token::Static"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>","synthetic":true,"types":["syn::token::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>","synthetic":true,"types":["syn::token::Super"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>","synthetic":true,"types":["syn::token::Trait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>","synthetic":true,"types":["syn::token::Try"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>","synthetic":true,"types":["syn::token::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>","synthetic":true,"types":["syn::token::Typeof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>","synthetic":true,"types":["syn::token::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>","synthetic":true,"types":["syn::token::Unsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>","synthetic":true,"types":["syn::token::Unsized"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>","synthetic":true,"types":["syn::token::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>","synthetic":true,"types":["syn::token::Virtual"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>","synthetic":true,"types":["syn::token::Where"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>","synthetic":true,"types":["syn::token::While"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>","synthetic":true,"types":["syn::token::Yield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>","synthetic":true,"types":["syn::token::Add"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>","synthetic":true,"types":["syn::token::AddEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>","synthetic":true,"types":["syn::token::And"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>","synthetic":true,"types":["syn::token::AndAnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>","synthetic":true,"types":["syn::token::AndEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>","synthetic":true,"types":["syn::token::At"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>","synthetic":true,"types":["syn::token::Bang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>","synthetic":true,"types":["syn::token::Caret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>","synthetic":true,"types":["syn::token::CaretEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>","synthetic":true,"types":["syn::token::Colon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>","synthetic":true,"types":["syn::token::Colon2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>","synthetic":true,"types":["syn::token::Comma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>","synthetic":true,"types":["syn::token::Div"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>","synthetic":true,"types":["syn::token::DivEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>","synthetic":true,"types":["syn::token::Dollar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>","synthetic":true,"types":["syn::token::Dot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>","synthetic":true,"types":["syn::token::Dot2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>","synthetic":true,"types":["syn::token::Dot3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>","synthetic":true,"types":["syn::token::DotDotEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>","synthetic":true,"types":["syn::token::Eq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>","synthetic":true,"types":["syn::token::EqEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>","synthetic":true,"types":["syn::token::Ge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>","synthetic":true,"types":["syn::token::Gt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>","synthetic":true,"types":["syn::token::Le"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>","synthetic":true,"types":["syn::token::Lt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>","synthetic":true,"types":["syn::token::MulEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>","synthetic":true,"types":["syn::token::Ne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>","synthetic":true,"types":["syn::token::Or"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>","synthetic":true,"types":["syn::token::OrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>","synthetic":true,"types":["syn::token::OrOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>","synthetic":true,"types":["syn::token::Pound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>","synthetic":true,"types":["syn::token::Question"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>","synthetic":true,"types":["syn::token::RArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>","synthetic":true,"types":["syn::token::LArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>","synthetic":true,"types":["syn::token::Rem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>","synthetic":true,"types":["syn::token::RemEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>","synthetic":true,"types":["syn::token::FatArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>","synthetic":true,"types":["syn::token::Semi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>","synthetic":true,"types":["syn::token::Shl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>","synthetic":true,"types":["syn::token::ShlEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>","synthetic":true,"types":["syn::token::Shr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>","synthetic":true,"types":["syn::token::ShrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>","synthetic":true,"types":["syn::token::Star"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>","synthetic":true,"types":["syn::token::Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>","synthetic":true,"types":["syn::token::SubEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>","synthetic":true,"types":["syn::token::Tilde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>","synthetic":true,"types":["syn::token::Brace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>","synthetic":true,"types":["syn::token::Bracket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>","synthetic":true,"types":["syn::token::Paren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>","synthetic":true,"types":["syn::token::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>","synthetic":true,"types":["syn::attr::Attribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>","synthetic":true,"types":["syn::attr::AttrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>","synthetic":true,"types":["syn::attr::Meta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>","synthetic":true,"types":["syn::attr::MetaList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>","synthetic":true,"types":["syn::attr::MetaNameValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>","synthetic":true,"types":["syn::attr::NestedMeta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>","synthetic":true,"types":["syn::data::Variant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>","synthetic":true,"types":["syn::data::Fields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>","synthetic":true,"types":["syn::data::FieldsNamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>","synthetic":true,"types":["syn::data::FieldsUnnamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>","synthetic":true,"types":["syn::data::Field"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>","synthetic":true,"types":["syn::data::Visibility"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>","synthetic":true,"types":["syn::data::VisPublic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>","synthetic":true,"types":["syn::data::VisCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>","synthetic":true,"types":["syn::data::VisRestricted"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>","synthetic":true,"types":["syn::expr::Expr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>","synthetic":true,"types":["syn::expr::ExprArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>","synthetic":true,"types":["syn::expr::ExprAssign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>","synthetic":true,"types":["syn::expr::ExprAssignOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>","synthetic":true,"types":["syn::expr::ExprAsync"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAwait.html\" title=\"struct syn::ExprAwait\">ExprAwait</a>","synthetic":true,"types":["syn::expr::ExprAwait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>","synthetic":true,"types":["syn::expr::ExprBinary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>","synthetic":true,"types":["syn::expr::ExprBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>","synthetic":true,"types":["syn::expr::ExprBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>","synthetic":true,"types":["syn::expr::ExprBreak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>","synthetic":true,"types":["syn::expr::ExprCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>","synthetic":true,"types":["syn::expr::ExprCast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>","synthetic":true,"types":["syn::expr::ExprClosure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>","synthetic":true,"types":["syn::expr::ExprContinue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>","synthetic":true,"types":["syn::expr::ExprField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>","synthetic":true,"types":["syn::expr::ExprForLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>","synthetic":true,"types":["syn::expr::ExprGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>","synthetic":true,"types":["syn::expr::ExprIf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>","synthetic":true,"types":["syn::expr::ExprIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>","synthetic":true,"types":["syn::expr::ExprLet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>","synthetic":true,"types":["syn::expr::ExprLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>","synthetic":true,"types":["syn::expr::ExprLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>","synthetic":true,"types":["syn::expr::ExprMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>","synthetic":true,"types":["syn::expr::ExprMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>","synthetic":true,"types":["syn::expr::ExprMethodCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>","synthetic":true,"types":["syn::expr::ExprParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>","synthetic":true,"types":["syn::expr::ExprPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>","synthetic":true,"types":["syn::expr::ExprRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>","synthetic":true,"types":["syn::expr::ExprReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>","synthetic":true,"types":["syn::expr::ExprRepeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>","synthetic":true,"types":["syn::expr::ExprReturn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>","synthetic":true,"types":["syn::expr::ExprStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>","synthetic":true,"types":["syn::expr::ExprTry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>","synthetic":true,"types":["syn::expr::ExprTryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>","synthetic":true,"types":["syn::expr::ExprTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>","synthetic":true,"types":["syn::expr::ExprType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>","synthetic":true,"types":["syn::expr::ExprUnary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>","synthetic":true,"types":["syn::expr::ExprUnsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>","synthetic":true,"types":["syn::expr::ExprWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>","synthetic":true,"types":["syn::expr::ExprYield"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>","synthetic":true,"types":["syn::expr::Member"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>","synthetic":true,"types":["syn::expr::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>","synthetic":true,"types":["syn::generics::Generics"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>","synthetic":true,"types":["syn::generics::GenericParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>","synthetic":true,"types":["syn::generics::TypeParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>","synthetic":true,"types":["syn::generics::LifetimeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>","synthetic":true,"types":["syn::generics::ConstParam"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::ImplGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::TypeGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::Turbofish"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>","synthetic":true,"types":["syn::generics::BoundLifetimes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>","synthetic":true,"types":["syn::generics::TypeParamBound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>","synthetic":true,"types":["syn::generics::TraitBound"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>","synthetic":true,"types":["syn::generics::TraitBoundModifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>","synthetic":true,"types":["syn::generics::WhereClause"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>","synthetic":true,"types":["syn::generics::WherePredicate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>","synthetic":true,"types":["syn::generics::PredicateType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>","synthetic":true,"types":["syn::generics::PredicateLifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>","synthetic":true,"types":["syn::generics::PredicateEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>","synthetic":true,"types":["syn::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>","synthetic":true,"types":["syn::lit::Lit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>","synthetic":true,"types":["syn::lit::LitStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>","synthetic":true,"types":["syn::lit::LitByteStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>","synthetic":true,"types":["syn::lit::LitByte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>","synthetic":true,"types":["syn::lit::LitChar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>","synthetic":true,"types":["syn::lit::LitInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>","synthetic":true,"types":["syn::lit::LitFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>","synthetic":true,"types":["syn::lit::LitBool"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>","synthetic":true,"types":["syn::lit::StrStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>","synthetic":true,"types":["syn::mac::Macro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>","synthetic":true,"types":["syn::mac::MacroDelimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>","synthetic":true,"types":["syn::derive::DeriveInput"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>","synthetic":true,"types":["syn::derive::Data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>","synthetic":true,"types":["syn::derive::DataStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>","synthetic":true,"types":["syn::derive::DataEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>","synthetic":true,"types":["syn::derive::DataUnion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>","synthetic":true,"types":["syn::op::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>","synthetic":true,"types":["syn::op::UnOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>","synthetic":true,"types":["syn::ty::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>","synthetic":true,"types":["syn::ty::TypeArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>","synthetic":true,"types":["syn::ty::TypeBareFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>","synthetic":true,"types":["syn::ty::TypeGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>","synthetic":true,"types":["syn::ty::TypeImplTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>","synthetic":true,"types":["syn::ty::TypeInfer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>","synthetic":true,"types":["syn::ty::TypeMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>","synthetic":true,"types":["syn::ty::TypeNever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>","synthetic":true,"types":["syn::ty::TypeParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>","synthetic":true,"types":["syn::ty::TypePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>","synthetic":true,"types":["syn::ty::TypePtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>","synthetic":true,"types":["syn::ty::TypeReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>","synthetic":true,"types":["syn::ty::TypeSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>","synthetic":true,"types":["syn::ty::TypeTraitObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>","synthetic":true,"types":["syn::ty::TypeTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>","synthetic":true,"types":["syn::ty::Abi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>","synthetic":true,"types":["syn::ty::BareFnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variadic.html\" title=\"struct syn::Variadic\">Variadic</a>","synthetic":true,"types":["syn::ty::Variadic"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>","synthetic":true,"types":["syn::ty::ReturnType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>","synthetic":true,"types":["syn::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>","synthetic":true,"types":["syn::path::PathSegment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>","synthetic":true,"types":["syn::path::PathArguments"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>","synthetic":true,"types":["syn::path::GenericArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>","synthetic":true,"types":["syn::path::AngleBracketedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>","synthetic":true,"types":["syn::path::Binding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>","synthetic":true,"types":["syn::path::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>","synthetic":true,"types":["syn::path::ParenthesizedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>","synthetic":true,"types":["syn::path::QSelf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>","synthetic":true,"types":["syn::buffer::TokenBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;","synthetic":true,"types":["syn::buffer::Cursor"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::Punctuated"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::Pairs"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::PairsMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::IntoPairs"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["syn::punctuated::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::IterMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::Pair"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;","synthetic":true,"types":["syn::lookahead::Lookahead1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Error.html\" title=\"struct syn::parse::Error\">Error</a>","synthetic":true,"types":["syn::error::Error"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;","synthetic":true,"types":["syn::parse::ParseBuffer"]},{"text":"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;","synthetic":true,"types":["syn::parse::StepCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Nothing.html\" title=\"struct syn::parse::Nothing\">Nothing</a>","synthetic":true,"types":["syn::parse::Nothing"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()